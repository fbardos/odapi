telemetry:
  enabled: false

scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator

local_artifact_storage:
  module: dagster.core.storage.root
  class: LocalArtifactStorage
  config:
    base_dir: "/opt/dagster/local/"

compute_logs:
  module: dagster_aws.s3.compute_log_manager
  class: S3ComputeLogManager
  config:
    endpoint_url:
      env: MINIO__ENDPOINT_URL
    bucket:
      env: MINIO__COMPUTELOG_BUCKET
    prefix: log

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      username:
        env: DAGSTER__PSQL_META__USER
      password:
        env: DAGSTER__PSQL_META__PASS
      hostname:
        env: DAGSTER__PSQL_META__HOST
      db_name:
        env: DAGSTER__PSQL_META__DB
      port: 5432

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      username:
        env: DAGSTER__PSQL_META__USER
      password:
        env: DAGSTER__PSQL_META__PASS
      hostname:
        env: DAGSTER__PSQL_META__HOST
      db_name:
        env: DAGSTER__PSQL_META__DB
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      username:
        env: DAGSTER__PSQL_META__USER
      password:
        env: DAGSTER__PSQL_META__PASS
      hostname:
        env: DAGSTER__PSQL_META__HOST
      db_name:
        env: DAGSTER__PSQL_META__DB
      port: 5432

concurrency:
  pools:
    granularity: "run"
    default_limit: 1
